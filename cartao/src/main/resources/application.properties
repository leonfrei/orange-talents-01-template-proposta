##mysql db
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost/proposta?createDatabaseIfNotExist=true}
spring.datasource.username=${DATABASE_USERNAME:mysql}
spring.datasource.password=${DATABASE_PASSWORD:password}

##hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

##variaveis de ambiente
analise.url=${ANALISE_URL:localhost:9999/api}
cartao.url=${CARTAO_URL:localhost:8888/api}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

##prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

## Jaeger - Habilita ou não
#opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
## Jaeger - Nome do serviço
#opentracing.jaeger.service-name=${spring.application.name}
## Jaeger - Endereço para enviar os metadados (trace, span, etc)
#opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
## Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
#opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}